version: '3.8'


x-postgres-common:
  &postgres-common
  # image: postgres:15
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U hello_django --dbname=hello_django_dev'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  web:
    build: ./app
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./app/:/usr/src/app/
    ports:
      - 8000:8000
      - 3000:3000
    # environment:
    #   DEBUG: ${DEBUG}
    #   SECRET_KEY: ${SECRET_KEY}
    #   DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
    #   DJANGO_SUPERUSER_USERNAME: ${DJANGO_SUPERUSER_USERNAME}
    #   DJANGO_SUPERUSER_PASSWORD: ${DJANGO_SUPERUSER_PASSWORD}
    #   DJANGO_SUPERUSER_EMAIL: ${DJANGO_SUPERUSER_EMAIL}
    #   SQL_ENGINE: ${SQL_ENGINE}
    #   SQL_DATABASE: ${SQL_DATABASE}
    #   SQL_USER: ${SQL_USER}
    #   SQL_PASSWORD: ${SQL_PASSWORD}
    #   SQL_HOST: ${SQL_HOST}
    #   SQL_PORT: ${SQL_PORT}
    #   DATABASE: ${DATABASE}
    #Dodane przez kryst 19.05.25 (Timezone)
    environment:
      - TZ=Europe/Warsaw
      - LANG=pl_PL.UTF-8
      - LANGUAGE=pl_PL:pl
      - LC_ALL=pl_PL.UTF-8
      
    env_file:
      - ./.env.dev
    depends_on:
      - db
  
  db:
    <<: *postgres-common
    build: ./db
    restart: always
    volumes:
      - ./sh_commands/:/sh_commands/
      - postgres_data:/var/lib/postgresql/data/
      - postgres_data_sec:/var/lib/postgresql/data2/
      - ./initdb-scripts/:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    env_file:
      - ./.env.dev
    # environment:
    #   POSTGRES_USER: ${POSTGRES_USER}
    #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    #   POSTGRES_DB: ${POSTGRES_DB}
    #   POSTGRES_HOST_AUTH_METHOD: ${POSTGRES_HOST_AUTH_METHOD}
    #   POSTGRES_INITDB_ARGS: ${POSTGRES_INITDB_ARGS}
    #   IP: ${IP}
    #   PRIDIR: ${PRIDIR}
    #   SECDIR: ${SECDIR}
    command: "bash ./sh_commands/init_primary.sh"
    # command: |
    #   postgres
    #   -c wal_level=replica
    #   -c hot_standby=on
    #   -c max_wal_senders=10
    #   -c max_replication_slots=10
    #   -c hot_standby_feedback=on

volumes:
  postgres_data:
  postgres_data_sec:

