# pages/urls.py
from django.urls import path
# from django.conf.urls import url
from . import views, models, forms
from django.contrib.auth.decorators import login_required

urlpatterns = [
    path("", views.HomeView.as_view(), name="home"),
    path("logout", views.logoutUser, name="logout"),
    path("browse/people", login_required(views.BrowsePeopleView.as_view(), login_url='/'), name="browse_people"),
    path("browse/families", login_required(views.BrowseFamiliesView.as_view(), login_url='/'), name="browse_families"),
    path("browse/roles", login_required(views.BrowseRolesView.as_view(), login_url='/'), name="browse_roles"),
    path("browse/activites", login_required(views.BrowseActivitiesView.as_view(), login_url='/'), name="browse_activites"),
    path("browse/courses", login_required(views.BrowseCoursesView.as_view(), login_url='/'), name="browse_courses"),
    path("browse/projects", login_required(views.BrowseProjectsView.as_view(), login_url='/'), name="browse_projects"),
    path("browse/events", login_required(views.BrowseEventsView.as_view(), login_url='/'), name="browse_events"),
    path("browse/event_types", login_required(views.BrowseEventTypesView.as_view(), login_url='/'), name="browse_event_types"),
    path("browse/categories", login_required(views.BrowseCategoriesView.as_view(), login_url='/'), name="browse_categories"),
    path("browse/activity_types", login_required(views.BrowseActivityTypesView.as_view(), login_url='/'), name="browse_activity_types"),
    path("add/person", login_required(views.get_concrete_addView("Dodaj osobę", forms.PersonForm, [views.BROWSE_NAV_ITEMS], ["Osoby"]).as_view(), login_url='/'), name="add_person"),
    path("add/role", login_required(views.get_concrete_addView("Dodaj rolę", forms.RoleForm, [views.BROWSE_NAV_ITEMS], ["Role"]).as_view(), login_url='/'), name="add_role"),
    path("add/project", login_required(views.get_concrete_addView("Dodaj projekt", forms.ProjectForm, [views.BROWSE_NAV_ITEMS], ["Projekty"]).as_view(), login_url='/'), name="add_project"),
    path("add/event", login_required(views.get_concrete_addView("Dodaj wydarzenie", forms.EventForm, [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS], ["Wydarzenia", "Przeglądaj"], 2).as_view(), login_url='/'), name="add_event"),
    path("add/group", login_required(views.get_concrete_addView("Dodaj grupę", forms.GroupsForm, [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS], ["Wydarzenia", "Grupy uczestników"], 2).as_view(), login_url='/'), name="add_group"),
    path("add/category", login_required(views.get_concrete_addView("Dodaj kategorię", forms.CategoriesForm, [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS], ["Wydarzenia", "Grupy uczestników"], 2).as_view(), login_url='/'), name="add_category"),
    path("add/course", login_required(views.get_concrete_addView("Dodaj kurs", forms.CoursesForm, [views.BROWSE_NAV_ITEMS], ["Kursy"]).as_view(), login_url='/'), name="add_course"),
    path("add/event_type", login_required(views.get_concrete_addView("Dodaj typ wydarzeń", forms.EventTypeForm, [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS], ["Wydarzenia", "Rodzaje wydarzeń"], 2).as_view(), login_url='/'), name="add_event_type"),
    path("add/activity_type", login_required(views.get_concrete_addView("Dodaj rodzaj aktywności", forms.ActivityTypesForm, [views.BROWSE_NAV_ITEMS, views.ACTIVITIES_NAV_ITEMS], ["Aktywności", "Przeglądaj"], 2).as_view(), login_url='/'), name="add_activity_type"),
    path("person/<str:fpk>/add_family", login_required(views.AddFamiliesView.as_view(), login_url='/'), name="add_family"),
    path("person/<str:fpk>/add_family_member/<str:spk>/", login_required(views.FamilyMemberBulkAddView.as_view(), login_url='/'), name="add_family_members"),
    path("person/<str:fpk>/family", login_required(views.PersonFamilyView.as_view(), login_url='/'), name="rodzinx"),
    path("person/<str:fpk>/data", login_required(views.PersonDataView.as_view(), login_url='/'), name="person_data"),
    path("person/<str:fpk>/roles", login_required(views.PersonRolesView.as_view(), login_url='/'), name="person_roles"),
    path("person/<str:fpk>/grant_role", login_required(views.PersonGrantRoleView.as_view(), login_url='/'), name="person_grant_role"),
    path("person/<str:fpk>/activities", login_required(views.PersonActivitiesView.as_view(), login_url='/'), name="person_activities"),
    path("person/<str:fpk>/courses", login_required(views.PersonCoursesView.as_view(), login_url='/'), name="person_courses"),
    path("person/<str:fpk>/data/edit", login_required(views.get_concrete_EditDataView("person/main.html", models.People, forms.PersonForm, ["Osoby", "Dane"], [views.BROWSE_NAV_ITEMS, views.PERSON_NAV_ITEMS]).as_view(), login_url='/'), name="edit_person"),
    path("person/<str:fpk>/delete", login_required(views.get_delete(models.People).as_view(), login_url='/'), name="delete_person"),
    path("person/<str:fpk>/add_activity", login_required(views.AddPersonActivityView.as_view(), login_url='/'), name="add_person_activity"),
    path("person/<str:fpk>/add_to_course", login_required(views.AddPersonToPeopleSemestersView.as_view(), login_url='/'), name="add_person_people_semestr"),
    path("person/<str:fpk>/family/<str:spk>/delete", login_required(views.DeleteFamilyView.as_view(), login_url='/'), name="delete_family"),
    path("person/<str:fpk>/role/<str:spk>/delete", login_required(views.DeletePeopleRolesView.as_view(), login_url='/'), name="delete_person_role"),
    path("person/<str:fpk>/course/<str:spk>/semester/<str:tpk>/attendance", login_required(views.PersonAttendanceView.as_view(), login_url='/'), name="person_attendance"),
    path("person/<str:fpk>/course/<str:spk>/semester/<str:tpk>/attendance/edit", login_required(views.PersonAttendanceEditView.as_view(), login_url='/'), name="person_attendance_edit"),
    path("person/<str:fpk>/events", login_required(views.PersonEventsView.as_view(), login_url='/'), name="person_events"),
    path("person/<str:fpk>/add_to_event", login_required(views.PersonAddToEventView.as_view(), login_url='/'), name="person_add_to_event"),
    path("roles/<str:fpk>/data", login_required(views.RoleDataView.as_view(), login_url='/'), name="role_data"),
    path("roles/<str:fpk>/bulk_add", login_required(views.RoleBulkAddView.as_view(), login_url='/'), name="role_bulk_add"),
    path("roles/<str:fpk>/rename", login_required(views.get_concrete_EditDataView("person/main.html", models.Roles, forms.RoleForm, ["Role"], [views.BROWSE_NAV_ITEMS]).as_view(), login_url='/'), name="role_rename"),
    path("roles/<str:fpk>/browse", login_required(views.RoleBrowseView.as_view(), login_url='/'), name="role_browse"),
    path("roles/<str:fpk>/grant_role", login_required(views.get_concrete_AddMulPKView({'fpk': 'rid'}, "Daj rolę osobie", forms.GrantRoleForm, models.Roles, [views.BROWSE_NAV_ITEMS, views.ROLES_NAV_ITEMS], ["Role", "Osoby z rolą"]).as_view(), login_url='/'), name="role_grant"),
    path("roles/<str:fpk>/delete", login_required(views.get_delete(models.Roles).as_view(), login_url='/'), name="delete_role"),
    path("projects/<str:fpk>/data", login_required(views.ProjectDataView.as_view(), login_url='/'), name="project_data"),
    path("projects/<str:fpk>/data/edit", login_required(views.get_concrete_EditDataView("projects/main.html", models.Projects, forms.ProjectForm, ["Projekty", "Dane"], [views.BROWSE_NAV_ITEMS, views.PROJECTS_NAV_ITEMS]).as_view(), login_url='/'), name="project_data_edit"),
    path("projects/<str:fpk>/delete", login_required(views.get_delete(models.Projects).as_view(), login_url='/'), name="project_delete"),
    path("projects/<str:fpk>/codes", login_required(views.ProjectsCodesView.as_view(), login_url='/'), name="project_codes"),
    path("projects/<str:fpk>/raport", login_required(views.ProjectsRaportView.as_view(), login_url='/'), name="project_raport"),
    path("projects/<str:fpk>/add_code", login_required(views.get_concrete_AddMulPKView({'fpk': 'project_id'}, "Dodaj kod", forms.CodesForm, models.Projects, [views.BROWSE_NAV_ITEMS, views.PROJECTS_NAV_ITEMS], ["Projekty", "Kody"]).as_view(), login_url='/'), name="project_add_codes"),
    path("projects/<str:fpk>/codes/<str:spk>/edit", login_required(views.CodesDataEditView.as_view(), login_url='/'), name="codes_edit"),
    path("projects/<str:fpk>/codes/<str:spk>/delete", login_required(views.DeleteCodesView.as_view(), login_url='/'), name="codes_delete"),
    path("events/<str:fpk>/data", login_required(views.EventsDataView.as_view(), login_url='/'), name="event_data_view"),
    path("events/<str:fpk>/bulk_add", login_required(views.EventBulkAddView.as_view(), login_url='/'), name="event_bulk_add_view"),
    path("events/<str:fpk>/data/edit", login_required(views.get_concrete_EditDataView("browse/main.html", models.Events, forms.EventForm, ["Wydarzenia", "Przeglądaj", "Dane"], [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS, views.CON_EVENT_NAV_ITEMS], 2).as_view(), login_url='/'), name="event_data_edit"),
    path("events/<str:fpk>/delete", login_required(views.get_delete(models.Events).as_view(), login_url='/'), name="event_delete"),
    path("events/<str:fpk>/attendees", login_required(views.EventsAttendeesView.as_view(), login_url='/'), name="event_atendees_view"),
    path("events/<str:fpk>/attendance", login_required(views.EventsAttendanceView.as_view(), login_url='/'), name="event_atendance_view"),
    path("events/<str:fpk>/add_attendee", login_required(views.AddEventPeopleEventsView.as_view(), login_url='/'), name="event_add_artendees_view"),
    path("events/<str:fpk>/edit_attendance", login_required(views.EventsEditAttendanceView.as_view(), login_url='/'), name="event_edit_artendees_view"),
    path("events/<str:fpk>/person/<str:spk>/delete_attendance", login_required(views.DeletePeopleEventsView.as_view(), login_url='/'), name="event_delete_artendees_view"),
    path("events/<str:fpk>/attendees/add", login_required(views.get_concrete_AddMulPKView({'fpk': 'event'}, "Dodaj uczestników", forms.AttendeesForm, models.Events, [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS, views.CON_EVENT_NAV_ITEMS], ["Wydarzenia", "Przeglądaj", "Szczegóły o uczestnikach"], 2).as_view(), login_url='/'), name="add_atendees_view"),
    path("events/<str:fpk>/attendees/<str:spk>/edit", login_required(views.ChangeNoAttendeesView.as_view(), login_url='/'), name="change_no_atendees_view"),
    path("event_types/<str:fpk>/delete", login_required(views.get_delete(models.EventTypes).as_view(), login_url='/'), name="event_type_delete"),
    path("category/<str:fpk>/delete", login_required(views.get_delete(models.Categories).as_view(), login_url='/'), name="category_delete"),
    path("group/<str:fpk>/delete", login_required(views.get_delete(models.Groups).as_view(), login_url='/'), name="group_delete"),
    path("course/<str:fpk>/data", login_required(views.CourseView.as_view(), login_url='/'), name="course_data"),
    path("course/<str:fpk>/delete", login_required(views.get_delete(models.Courses).as_view(), login_url='/'), name="course_delete"),
    path("import/people", login_required(views.ImportPersonView.as_view(), login_url='/'), name="import_person"),
    path("import/roles", login_required(views.ImportRoleView.as_view(), login_url='/'), name="import_role"),
    path("import/courses", login_required(views.ImportCourseView.as_view(), login_url='/'), name="import_courses"),
    path("import/people_semesters", login_required(views.ImportPeopleSemestersView.as_view(), login_url='/'), name="import_people_semesters"),
    path("import/semesters", login_required(views.ImportSemestersView.as_view(), login_url='/'), name="import_semesters"),
    path("category/<str:fpk>/rename", login_required(views.get_concrete_EditDataView("browse/main.html", models.Categories, forms.CategoriesForm, ["Osoby", "Dane"], [views.BROWSE_NAV_ITEMS, views.PERSON_NAV_ITEMS]).as_view(), login_url='/'), name="rename_category"),
    path("group/<str:fpk>/rename", login_required(views.get_concrete_EditDataView("browse/main.html", models.Groups, forms.GroupsForm, ["Wydarzenia", "Grupy uczestników"], [views.BROWSE_NAV_ITEMS, views.EVENT_NAV_ITEMS], 2).as_view(), login_url='/'), name="rename_group"),
    path("add/family", login_required(views.get_concrete_addView("Dodaj rodzinę", forms.ViewFamiliesForm, [views.BROWSE_NAV_ITEMS], ["Rodziny"]).as_view(), login_url='/'), name="add_family_from_form"),
    path("course/<str:fpk>/data/edit", login_required(views.get_concrete_EditDataView("browse/main.html", models.Courses, forms.CoursesForm, ["Kursy", "Dane"], [views.BROWSE_NAV_ITEMS, views.COURSES_NAV_ITEMS]).as_view(), login_url='/'), name="edi_course_data"),
    path("course/<str:fpk>/semesters", login_required(views.CoursesSemestersView.as_view(), login_url='/'), name="course_browse_semesters"),
    path("course/<str:fpk>/add/semester", login_required(views.get_concrete_AddMulPKView({'fpk': 'course_id'}, "Dodaj semestr", forms.SemesterForm, models.Courses, [views.BROWSE_NAV_ITEMS, views.COURSES_NAV_ITEMS], ["Kursy", "Semestry"]).as_view(), login_url='/'), name="add_semester_view"),
    path("course/<str:fpk>/semester/<str:spk>/delete", login_required(views.DeleteSemesterView.as_view(), login_url='/'), name="delete_semester"),
    path("course/<str:fpk>/semester/<str:spk>/add_date", login_required(views.AddSemesterDatesView.as_view(), login_url='/'), name="add_semester_dates"),
    path("attendees/<str:fpk>/<str:spk>/delete", login_required(views.DeleteAttendeesView.as_view(), login_url='/'), name="delete_atendees"),
    path("course/<str:fpk>/semester/<str:spk>/dates", login_required(views.SemestersDatesView.as_view(), login_url='/'), name="semesters_dates"),
    path("course/<str:fpk>/semester/<str:spk>/data", login_required(views.SemestersDataView.as_view(), login_url='/'), name="semester_data"),
    path("course/<str:fpk>/semester/<str:spk>/data/edit", login_required(views.SemestersDataEditView.as_view(), login_url='/'), name="semester_data_edit"),
    path("course/<str:fpk>/semester/<str:spk>/dates/<str:tpk>", login_required(views.BrowseSemesterDatesView.as_view(), login_url='/'), name="browse_semester_dates"),
    path("course/<str:fpk>/semester/<str:spk>/attendees", login_required(views.SemestersAttendeesView.as_view(), login_url='/'), name="browse_semester_atendees"),
    path("course/<str:fpk>/semester/<str:spk>/bulk_add", login_required(views.SemesterBulkAddView.as_view(), login_url='/'), name="semester_bulk_add"),
    path("course/<str:fpk>/semester/<str:spk>/add_attendee", login_required(views.AddSemesterToPeopleSemestersView.as_view(), login_url='/'), name="add_atendee_via_semesters"),
    path("course/<str:fpk>/semester/<str:spk>/person/<str:tpk>/delete_attendance", login_required(views.DeleteAttendant.as_view(), login_url='/'), name="delete_attendant"),
    path("course/<str:fpk>/semester/<str:spk>/dates/<str:tpk>/edit", login_required(views.EditAttendanceView.as_view(), login_url='/'), name="edit_attendance"),
    path("course/<str:fpk>/semester/<str:spk>/dates/<str:tpk>/delete", login_required(views.DeleteSemesterDates.as_view(), login_url='/'), name="delete_semester_dates"),
    path("activity_type/<str:fpk>/delete", login_required(views.get_delete(models.ActivityTypes).as_view(), login_url='/'), name="activity_types_delete"),
    path("activity_type/<str:fpk>/rename", login_required(views.get_concrete_EditDataView("browse/main.html", models.ActivityTypes, forms.ActivityTypesForm, ["Aktywności", "Rodzaje aktywności"], [views.BROWSE_NAV_ITEMS, views.ACTIVITIES_NAV_ITEMS], 2).as_view(), login_url='/'), name="activity_types_rename"),
    path("roles/<str:fpk>/activity_type/add", login_required(views.get_concrete_AddMulPKView({'fpk': 'rid'}, "Dodaj dozwolony rodzaj aktywności", forms.RolesActivityTypesForm, models.Roles, [views.BROWSE_NAV_ITEMS, views.ROLES_NAV_ITEMS], ["Role", "Dozwolone aktywności"]).as_view(), login_url='/'), name="role_add_activity_type"),
    path("roles/<str:fpk>/activity_type/<str:spk>/delete", login_required(views.DeleteRolesActivityTypesView.as_view(), login_url='/'), name="role_delete_activity_type"),
    path("add_activity", login_required(views.AddActivityView.as_view(), login_url='/'), name="add_activity"),
    path("person/<str:fpk>/activity_type/<str:spk>/activity/<str:tpk>/delete", login_required(views.DeleteActivityView.as_view(), login_url='/'), name="delete_activity"),
    path("person/<str:fpk>/activity_type/<str:spk>/activity/<str:tpk>/data", login_required(views.ActivityDataView.as_view(), login_url='/'), name="activity_data"),
    path("person/<str:fpk>/activity_type/<str:spk>/activity/<str:tpk>/edit", login_required(views.ActivityDataEditView.as_view(), login_url='/'), name="activity_data_edit"),
    path("person/<str:fpk>/consents", login_required(views.PersonConsentsView.as_view(), login_url='/'), name="person_browse_consents"),
    path("person/<str:fpk>/consent/<str:spk>/delete", login_required(views.DeleteConsentView.as_view(), login_url='/'), name="consent_delete"),
    path("person/<str:fpk>/add_consent", login_required(views.AddConsentView.as_view(), login_url='/'), name="add_consent"),
    path("person/<str:fpk>/consent/<str:spk>/data", login_required(views.ConsentDataView.as_view(), login_url='/'), name="consent_data"),
    path("person/<str:fpk>/consent/<str:spk>/edit", login_required(views.ConsentDataEditView.as_view(), login_url='/'), name="consent_edit"),
    path("admin_settings/genders", login_required(views.BrowseGendersView.as_view(), login_url='/'), name="browse_genders"),
    path("add_gender", login_required(views.get_concrete_addView("Dodaj płeć", forms.GenderForm, [views.SETTINGS_NAV_ITEMS], "Płcie").as_view(), login_url='/'), name="add_gender"),
    path("gender/<str:fpk>/delete", login_required(views.get_delete(models.Genders).as_view(), login_url='/'), name="delete_gender"),
    path("admin_settings/attendance_types", login_required(views.BrowseAttendanceTypesView.as_view(), login_url='/'), name="browse_attendance_types"),
    path("add_attendance_type", login_required(views.get_concrete_addView("Dodaj rodzaj obecności", forms.AttendanceTypesForm, [views.SETTINGS_NAV_ITEMS], "Rodzaje obecności").as_view(), login_url='/'), name="add_attendance_type"),
    path("attendance_type/<str:fpk>/delete", login_required(views.get_delete(models.AttendanceTypes).as_view(), login_url='/'), name="delete_attendance_type"),
    path("admin_settings/teachers", login_required(views.BrowseTeacherRolesView.as_view(), login_url='/'), name="browse_teacher_roles"),
    path("add_teacher_role", login_required(views.get_concrete_addView("Dodaj rolę zezwalającą na nauczanie", forms.TeacherRolesForm, [views.SETTINGS_NAV_ITEMS], ["Role nauczycieli"]).as_view(), login_url='/'), name="add_teacher_role"),
    path("teacher_roles/<str:fpk>/delete", login_required(views.DeleteTeacherRoleView.as_view(), login_url='/'), name="delete_teacher_role"),
    path("admin_settings/attendees", login_required(views.BrowseStudentRolesView.as_view(), login_url='/'), name="browse_student_roles"),
    path("add_student_role", login_required(views.get_concrete_addView("Dodaj rolę zezwalającą na uczestnictwo w kursach", forms.StudentRolesForm, [views.SETTINGS_NAV_ITEMS], ["Role kursantów"]).as_view(), login_url='/'), name="add_student_role"),
    path("student_roles/<str:fpk>/delete", login_required(views.DeleteStudentRoleView.as_view(), login_url='/'), name="delete_student_role"),
    path("admin_settings/family_members", login_required(views.BrowseFamilyMembersView.as_view(), login_url='/'), name="browse_family_members"),
    path("add_family_member", login_required(views.get_concrete_addView("Dodaj rodzaj członka rodziny", forms.FamilyMembersForm, [views.SETTINGS_NAV_ITEMS], ["Rodzaje członków rodziny"]).as_view(), login_url='/'), name="add_student_role"),
    path("family_members/<str:fpk>/delete", login_required(views.get_delete(models.FamilyMembers).as_view(), login_url='/'), name="delete_family_member")
]
